/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BBone, BBoneInterface } from "../BBone";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_joeRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "BobtailContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountAVAX",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IBBone.LiquidityType",
        name: "liquidityType",
        type: "uint8",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_matchManager",
        type: "address",
      },
    ],
    name: "MatchManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "PayMatchReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "PayStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_stakingManager",
        type: "address",
      },
    ],
    name: "StakingManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "SwapPairUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountAvax",
        type: "uint256",
      },
      {
        internalType: "enum IBBone.LiquidityType",
        name: "_liquidityType",
        type: "uint8",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joePair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payMatchReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setBobtailContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_matchManager",
        type: "address",
      },
    ],
    name: "setMatchManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingManager",
        type: "address",
      },
    ],
    name: "setStakingManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setSwapPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001da338038062001da38339810160408190526200003491620004c4565b604080518082018252600c81526b426f627461696c20426f6e6560a01b60208083019182528351808501909452600584526442426f6e6560d81b90840152815191929162000085916003916200041e565b5080516200009b9060049060208401906200041e565b505050620000b8620000b26200025260201b60201c565b62000256565b620000cc33670de0b6b3a7640000620002a8565b6000819050806001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001369190620004c4565b6001600160a01b031663c9c6539630836001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000184573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001aa9190620004c4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620001f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021e9190620004c4565b6001600160a01b0390811660a08190526000908152600960205260409020805460ff1916600117905516608052506200055a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620003045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b62000312600083836200039f565b8060026000828254620003269190620004f6565b90915550506001600160a01b0382166000908152602081905260408120805483929062000355908490620004f6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b620003b78383836200041960201b62000eb31760201c565b3360009081526009602052604090205460ff1615620004195760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207472616e736665722066726f6d207377617020706169720000006044820152606401620002fb565b505050565b8280546200042c906200051d565b90600052602060002090601f0160209004810192826200045057600085556200049b565b82601f106200046b57805160ff19168380011785556200049b565b828001600101855582156200049b579182015b828111156200049b5782518255916020019190600101906200047e565b50620004a9929150620004ad565b5090565b5b80821115620004a95760008155600101620004ae565b600060208284031215620004d757600080fd5b81516001600160a01b0381168114620004ef57600080fd5b9392505050565b600082198211156200051857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200053257607f821691505b602082108114156200055457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05161180e6200059560003960006102bd0152600081816109ad01528181610a9c01528181610b440152610b8a015261180e6000f3fe60806040526004361061014f5760003560e01c80638348a288116100b6578063b52a8f361161006f578063b52a8f36146103dd578063d3e09538146103fd578063dd62ed3e1461041d578063ec4a111614610463578063f2fde38b14610483578063f99a8ac4146104a357600080fd5b80638348a2881461032a5780638da5cb5b1461034a57806395d89b4114610368578063a457c2d71461037d578063a9059cbb1461039d578063b00bba6a146103bd57600080fd5b8063313ce56711610108578063313ce5671461024f578063395093511461026b5780634a0a0e4b1461028b5780636bca89cb146102ab57806370a08231146102df578063715018a61461031557600080fd5b806306fdde031461015b578063095ea7b31461018657806318160ddd146101b657806322828cc2146101d557806323b872dd1461020d578063290f1d081461022d57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506101706104c3565b60405161017d91906113e4565b60405180910390f35b34801561019257600080fd5b506101a66101a136600461144e565b610555565b604051901515815260200161017d565b3480156101c257600080fd5b506002545b60405190815260200161017d565b3480156101e157600080fd5b506006546101f5906001600160a01b031681565b6040516001600160a01b03909116815260200161017d565b34801561021957600080fd5b506101a661022836600461147a565b61056d565b34801561023957600080fd5b5061024d6102483660046114bb565b610591565b005b34801561025b57600080fd5b506040516012815260200161017d565b34801561027757600080fd5b506101a661028636600461144e565b610619565b34801561029757600080fd5b5061024d6102a636600461144e565b610658565b3480156102b757600080fd5b506101f57f000000000000000000000000000000000000000000000000000000000000000081565b3480156102eb57600080fd5b506101c76102fa3660046114bb565b6001600160a01b031660009081526020819052604090205490565b34801561032157600080fd5b5061024d610703565b34801561033657600080fd5b5061024d6103453660046114df565b610739565b34801561035657600080fd5b506005546001600160a01b03166101f5565b34801561037457600080fd5b506101706107bf565b34801561038957600080fd5b506101a661039836600461144e565b6107ce565b3480156103a957600080fd5b506101a66103b836600461144e565b610860565b3480156103c957600080fd5b5061024d6103d83660046114bb565b61086e565b3480156103e957600080fd5b5061024d6103f836600461151d565b6108e6565b34801561040957600080fd5b5061024d6104183660046114df565b610cac565b34801561042957600080fd5b506101c7610438366004611546565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561046f57600080fd5b5061024d61047e36600461144e565b610d32565b34801561048f57600080fd5b5061024d61049e3660046114bb565b610e18565b3480156104af57600080fd5b506007546101f5906001600160a01b031681565b6060600380546104d290611574565b80601f01602080910402602001604051908101604052809291908181526020018280546104fe90611574565b801561054b5780601f106105205761010080835404028352916020019161054b565b820191906000526020600020905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b600033610563818585610eb8565b5060019392505050565b60003361057b858285610fdc565b61058685858561106e565b506001949350505050565b6005546001600160a01b031633146105c45760405162461bcd60e51b81526004016105bb906115af565b60405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527fcf6ec682a4d7b77576e2cf0c71673ef4bc1af85481dff636b4c69d7198e41930906020015b60405180910390a150565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061056390829086906106539087906115e4565b610eb8565b6007546001600160a01b031633146106b25760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f74206d617463684d616e6167657200000000000060448201526064016105bb565b6106bc8282611247565b604080516001600160a01b0384168152602081018390527fba40b52152c36d244f738a519605a568cb0d598132317956b6ba13714f7fbd8e91015b60405180910390a15050565b6005546001600160a01b0316331461072d5760405162461bcd60e51b81526004016105bb906115af565b6107376000611332565b565b6005546001600160a01b031633146107635760405162461bcd60e51b81526004016105bb906115af565b6001600160a01b038216600081815260096020908152604091829020805460ff19168515159081179091558251938452908301527fda775fe65b87d02afd6ce385afebe9e6398be213feaca101f01f0e002c6a2bf191016106f7565b6060600480546104d290611574565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105bb565b6105868286868403610eb8565b60003361056381858561106e565b6005546001600160a01b031633146108985760405162461bcd60e51b81526004016105bb906115af565b600680546001600160a01b0319166001600160a01b0383169081179091556040519081527f55acc64e4a72cc89f8652df08117adc5f4c96f616ea32414ce208b82e370a2db9060200161060e565b3360009081526008602052604090205460ff166109455760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f7420626f627461696c20636f6e7472616374000060448201526064016105bb565b8147101561098a5760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016105bb565b6040805160028082526060820183526000926020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611620565b81600081518110610a4057610a4061163d565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110610a7457610a7461163d565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81526000917f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f90610ad39087908690600401611653565b600060405180830381865afa158015610af0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1891908101906116aa565b9050610b3e3082600181518110610b3157610b3161163d565b6020026020010151611247565b610b83307f000000000000000000000000000000000000000000000000000000000000000083600181518110610b7657610b7661163d565b6020026020010151610eb8565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f91b3f72883087600181518110610bcc57610bcc61163d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015260006044820181905260648201523060848201524260a482015260c40160606040518083038185885af1158015610c3b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c609190611768565b9250925092507f450b73e69fa136287ccb514375c55718e5cfed859787b97bcb13879b26e0f56083838389604051610c9b9493929190611796565b60405180910390a150505050505050565b6005546001600160a01b03163314610cd65760405162461bcd60e51b81526004016105bb906115af565b6001600160a01b038216600081815260086020908152604091829020805460ff19168515159081179091558251938452908301527f84bfa495194222e24a8ea92a439751599950707d061b42982740d4988b45cc9e91016106f7565b6006546001600160a01b03163314610d8c5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f74207374616b696e674d616e616765720000000060448201526064016105bb565b60008111610dcf5760405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b60448201526064016105bb565b610dd98282611247565b604080516001600160a01b0384168152602081018390527f19793bd7df1918da6dfd490e0ed0fd37a6b262cc598882451f4d98743f47280191016106f7565b6005546001600160a01b03163314610e425760405162461bcd60e51b81526004016105bb906115af565b6001600160a01b038116610ea75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bb565b610eb081611332565b50565b505050565b6001600160a01b038316610f1a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105bb565b6001600160a01b038216610f7b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105bb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611068578181101561105b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105bb565b6110688484848403610eb8565b50505050565b6001600160a01b0383166110d25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105bb565b6001600160a01b0382166111345760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105bb565b61113f838383611384565b6001600160a01b038316600090815260208190526040902054818110156111b75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105bb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111ee9084906115e4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161123a91815260200190565b60405180910390a3611068565b6001600160a01b03821661129d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105bb565b6112a960008383611384565b80600260008282546112bb91906115e4565b90915550506001600160a01b038216600090815260208190526040812080548392906112e89084906115e4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3360009081526009602052604090205460ff1615610eb35760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207472616e736665722066726f6d2073776170207061697200000060448201526064016105bb565b600060208083528351808285015260005b81811015611411578581018301518582016040015282016113f5565b81811115611423576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610eb057600080fd5b6000806040838503121561146157600080fd5b823561146c81611439565b946020939093013593505050565b60008060006060848603121561148f57600080fd5b833561149a81611439565b925060208401356114aa81611439565b929592945050506040919091013590565b6000602082840312156114cd57600080fd5b81356114d881611439565b9392505050565b600080604083850312156114f257600080fd5b82356114fd81611439565b91506020830135801515811461151257600080fd5b809150509250929050565b6000806040838503121561153057600080fd5b8235915060208301356003811061151257600080fd5b6000806040838503121561155957600080fd5b823561156481611439565b9150602083013561151281611439565b600181811c9082168061158857607f821691505b602082108114156115a957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561160557634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561163257600080fd5b81516114d881611439565b634e487b7160e01b600052603260045260246000fd5b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561169d5784516001600160a01b031683529383019391830191600101611678565b5090979650505050505050565b600060208083850312156116bd57600080fd5b825167ffffffffffffffff808211156116d557600080fd5b818501915085601f8301126116e957600080fd5b8151818111156116fb576116fb61160a565b8060051b604051601f19603f830116810181811085821117156117205761172061160a565b60405291825284820192508381018501918883111561173e57600080fd5b938501935b8285101561175c57845184529385019392850192611743565b98975050505050505050565b60008060006060848603121561177d57600080fd5b8351925060208401519150604084015190509250925092565b848152602081018490526040810183905260808101600383106117c957634e487b7160e01b600052602160045260246000fd5b8260608301529594505050505056fea2646970667358221220b0a296627236abb2286138e66ec243fbdf03804dd8399c6fd5688adf7ed959a064736f6c634300080c0033";

type BBoneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BBoneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BBone__factory extends ContractFactory {
  constructor(...args: BBoneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BBone";
  }

  deploy(
    _joeRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BBone> {
    return super.deploy(_joeRouter, overrides || {}) as Promise<BBone>;
  }
  getDeployTransaction(
    _joeRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_joeRouter, overrides || {});
  }
  attach(address: string): BBone {
    return super.attach(address) as BBone;
  }
  connect(signer: Signer): BBone__factory {
    return super.connect(signer) as BBone__factory;
  }
  static readonly contractName: "BBone";
  public readonly contractName: "BBone";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BBoneInterface {
    return new utils.Interface(_abi) as BBoneInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BBone {
    return new Contract(address, _abi, signerOrProvider) as BBone;
  }
}
