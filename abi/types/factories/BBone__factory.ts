/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BBone, BBoneInterface } from "../BBone";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountAVAX",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IBBone.LiquidityType",
        name: "liquidityType",
        type: "uint8",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "matchDuration",
        type: "address",
      },
    ],
    name: "MatchManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "matchDuration",
        type: "address",
      },
    ],
    name: "StakingManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "addBobtailContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountAvax",
        type: "uint256",
      },
      {
        internalType: "enum IBBone.LiquidityType",
        name: "_liquidityType",
        type: "uint8",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "addSwapPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joePair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payMatchReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_matchManager",
        type: "address",
      },
    ],
    name: "setMatchManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingManager",
        type: "address",
      },
    ],
    name: "setStakingManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405260016006553480156200001657600080fd5b5060405162001ead38038062001ead8339810160408190526200003991620004dd565b604080518082018252600c81526b426f627461696c20426f6e6560a01b60208083019182528351808501909452600584526442426f6e6560d81b9084015281519192916200008a9160039162000437565b508051620000a090600490602084019062000437565b505050620000bd620000b76200026b60201b60201c565b6200026f565b620000e533620000d06012600a62000624565b620000df90620f424062000635565b620002c1565b6000819050806001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000129573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014f9190620004dd565b6001600160a01b031663c9c6539630836001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c39190620004dd565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000211573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002379190620004dd565b6001600160a01b0390811660a08190526000908152600a60205260409020805460ff191660011790551660805250620006af565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200031d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200032b60008383620003b8565b80600260008282546200033f919062000657565b90915550506001600160a01b038216600090815260208190526040812080548392906200036e90849062000657565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b620003d08383836200043260201b62000e441760201c565b336000908152600a602052604090205460ff1615620004325760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207472616e736665722066726f6d20737761702070616972000000604482015260640162000314565b505050565b828054620004459062000672565b90600052602060002090601f016020900481019282620004695760008555620004b4565b82601f106200048457805160ff1916838001178555620004b4565b82800160010185558215620004b4579182015b82811115620004b457825182559160200191906001019062000497565b50620004c2929150620004c6565b5090565b5b80821115620004c25760008155600101620004c7565b600060208284031215620004f057600080fd5b81516001600160a01b03811681146200050857600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005665781600019048211156200054a576200054a6200050f565b808516156200055857918102915b93841c93908002906200052a565b509250929050565b6000826200057f575060016200061e565b816200058e575060006200061e565b8160018114620005a75760028114620005b257620005d2565b60019150506200061e565b60ff841115620005c657620005c66200050f565b50506001821b6200061e565b5060208310610133831016604e8410600b8410161715620005f7575081810a6200061e565b62000603838362000525565b80600019048211156200061a576200061a6200050f565b0290505b92915050565b60006200050860ff8416836200056e565b60008160001904831182151516156200065257620006526200050f565b500290565b600082198211156200066d576200066d6200050f565b500190565b600181811c908216806200068757607f821691505b60208210811415620006a957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516117c3620006ea60003960006102bd0152600081816109e101528181610ad001528181610b780152610bbe01526117c36000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063b00bba6a1161006f578063b00bba6a146103dd578063b52a8f36146103fd578063dd62ed3e1461041d578063ec4a111614610463578063f2fde38b14610483578063f99a8ac4146104a357600080fd5b80638da5cb5b1461032a578063930af4c51461034857806395d89b4114610368578063a157a29c1461037d578063a457c2d71461039d578063a9059cbb146103bd57600080fd5b8063313ce56711610108578063313ce5671461024f578063395093511461026b5780634a0a0e4b1461028b5780636bca89cb146102ab57806370a08231146102df578063715018a61461031557600080fd5b806306fdde031461015b578063095ea7b31461018657806318160ddd146101b657806322828cc2146101d557806323b872dd1461020d578063290f1d081461022d57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506101706104c3565b60405161017d9190611375565b60405180910390f35b34801561019257600080fd5b506101a66101a13660046113df565b610555565b604051901515815260200161017d565b3480156101c257600080fd5b506002545b60405190815260200161017d565b3480156101e157600080fd5b506007546101f5906001600160a01b031681565b6040516001600160a01b03909116815260200161017d565b34801561021957600080fd5b506101a661022836600461140b565b61056d565b34801561023957600080fd5b5061024d61024836600461144c565b610591565b005b34801561025b57600080fd5b506040516012815260200161017d565b34801561027757600080fd5b506101a66102863660046113df565b610619565b34801561029757600080fd5b5061024d6102a63660046113df565b610658565b3480156102b757600080fd5b506101f57f000000000000000000000000000000000000000000000000000000000000000081565b3480156102eb57600080fd5b506101c76102fa36600461144c565b6001600160a01b031660009081526020819052604090205490565b34801561032157600080fd5b5061024d6106ec565b34801561033657600080fd5b506005546001600160a01b03166101f5565b34801561035457600080fd5b5061024d610363366004611470565b610722565b34801561037457600080fd5b50610170610777565b34801561038957600080fd5b5061024d610398366004611470565b610786565b3480156103a957600080fd5b506101a66103b83660046113df565b6107db565b3480156103c957600080fd5b506101a66103d83660046113df565b61086d565b3480156103e957600080fd5b5061024d6103f836600461144c565b61087b565b34801561040957600080fd5b5061024d6104183660046114ae565b6108f3565b34801561042957600080fd5b506101c76104383660046114d7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561046f57600080fd5b5061024d61047e3660046113df565b610ce5565b34801561048f57600080fd5b5061024d61049e36600461144c565b610da9565b3480156104af57600080fd5b506008546101f5906001600160a01b031681565b6060600380546104d290611505565b80601f01602080910402602001604051908101604052809291908181526020018280546104fe90611505565b801561054b5780601f106105205761010080835404028352916020019161054b565b820191906000526020600020905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b600033610563818585610e49565b5060019392505050565b60003361057b858285610f6d565b610586858585610fff565b506001949350505050565b6005546001600160a01b031633146105c45760405162461bcd60e51b81526004016105bb90611540565b60405180910390fd5b600880546001600160a01b0319166001600160a01b0383169081179091556040519081527fcf6ec682a4d7b77576e2cf0c71673ef4bc1af85481dff636b4c69d7198e41930906020015b60405180910390a150565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906105639082908690610653908790611575565b610e49565b60065460011461067a5760405162461bcd60e51b81526004016105bb9061159b565b60026006556008546001600160a01b031633146106d95760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f74206d617463684d616e6167657200000000000060448201526064016105bb565b6106e382826111d8565b50506001600655565b6005546001600160a01b031633146107165760405162461bcd60e51b81526004016105bb90611540565b61072060006112c3565b565b6005546001600160a01b0316331461074c5760405162461bcd60e51b81526004016105bb90611540565b6001600160a01b03919091166000908152600a60205260409020805460ff1916911515919091179055565b6060600480546104d290611505565b6005546001600160a01b031633146107b05760405162461bcd60e51b81526004016105bb90611540565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108605760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105bb565b6105868286868403610e49565b600033610563818585610fff565b6005546001600160a01b031633146108a55760405162461bcd60e51b81526004016105bb90611540565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f55acc64e4a72cc89f8652df08117adc5f4c96f616ea32414ce208b82e370a2db9060200161060e565b6006546001146109155760405162461bcd60e51b81526004016105bb9061159b565b60026006553360009081526009602052604090205460ff166109795760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f7420626f627461696c20636f6e7472616374000060448201526064016105bb565b814710156109be5760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016105bb565b6040805160028082526060820183526000926020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6191906115d5565b81600081518110610a7457610a746115f2565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110610aa857610aa86115f2565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81526000917f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f90610b079087908690600401611608565b600060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4c919081019061165f565b9050610b723082600181518110610b6557610b656115f2565b60200260200101516111d8565b610bb7307f000000000000000000000000000000000000000000000000000000000000000083600181518110610baa57610baa6115f2565b6020026020010151610e49565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f91b3f72883087600181518110610c0057610c006115f2565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015260006044820181905260648201523060848201524260a482015260c40160606040518083038185885af1158015610c6f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c94919061171d565b9250925092507f450b73e69fa136287ccb514375c55718e5cfed859787b97bcb13879b26e0f56083838389604051610ccf949392919061174b565b60405180910390a1505060016006555050505050565b600654600114610d075760405162461bcd60e51b81526004016105bb9061159b565b60026006556007546001600160a01b03163314610d665760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f74207374616b696e674d616e616765720000000060448201526064016105bb565b600081116106d95760405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b60448201526064016105bb565b6005546001600160a01b03163314610dd35760405162461bcd60e51b81526004016105bb90611540565b6001600160a01b038116610e385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bb565b610e41816112c3565b50565b505050565b6001600160a01b038316610eab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105bb565b6001600160a01b038216610f0c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105bb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610ff95781811015610fec5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105bb565b610ff98484848403610e49565b50505050565b6001600160a01b0383166110635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105bb565b6001600160a01b0382166110c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105bb565b6110d0838383611315565b6001600160a01b038316600090815260208190526040902054818110156111485760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105bb565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061117f908490611575565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111cb91815260200190565b60405180910390a3610ff9565b6001600160a01b03821661122e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105bb565b61123a60008383611315565b806002600082825461124c9190611575565b90915550506001600160a01b03821660009081526020819052604081208054839290611279908490611575565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b336000908152600a602052604090205460ff1615610e445760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207472616e736665722066726f6d2073776170207061697200000060448201526064016105bb565b600060208083528351808285015260005b818110156113a257858101830151858201604001528201611386565b818111156113b4576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610e4157600080fd5b600080604083850312156113f257600080fd5b82356113fd816113ca565b946020939093013593505050565b60008060006060848603121561142057600080fd5b833561142b816113ca565b9250602084013561143b816113ca565b929592945050506040919091013590565b60006020828403121561145e57600080fd5b8135611469816113ca565b9392505050565b6000806040838503121561148357600080fd5b823561148e816113ca565b9150602083013580151581146114a357600080fd5b809150509250929050565b600080604083850312156114c157600080fd5b823591506020830135600381106114a357600080fd5b600080604083850312156114ea57600080fd5b82356114f5816113ca565b915060208301356114a3816113ca565b600181811c9082168061151957607f821691505b6020821081141561153a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561159657634e487b7160e01b600052601160045260246000fd5b500190565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156115e757600080fd5b8151611469816113ca565b634e487b7160e01b600052603260045260246000fd5b6000604082018483526020604081850152818551808452606086019150828701935060005b818110156116525784516001600160a01b03168352938301939183019160010161162d565b5090979650505050505050565b6000602080838503121561167257600080fd5b825167ffffffffffffffff8082111561168a57600080fd5b818501915085601f83011261169e57600080fd5b8151818111156116b0576116b06115bf565b8060051b604051601f19603f830116810181811085821117156116d5576116d56115bf565b6040529182528482019250838101850191888311156116f357600080fd5b938501935b82851015611711578451845293850193928501926116f8565b98975050505050505050565b60008060006060848603121561173257600080fd5b8351925060208401519150604084015190509250925092565b8481526020810184905260408101839052608081016003831061177e57634e487b7160e01b600052602160045260246000fd5b8260608301529594505050505056fea26469706673582212209579a585ca278ff277a0f85464ee445531d2388fb7a5aa30d9e9e71f4ed1d49864736f6c634300080c0033";

type BBoneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BBoneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BBone__factory extends ContractFactory {
  constructor(...args: BBoneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BBone";
  }

  deploy(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BBone> {
    return super.deploy(_router, overrides || {}) as Promise<BBone>;
  }
  getDeployTransaction(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  attach(address: string): BBone {
    return super.attach(address) as BBone;
  }
  connect(signer: Signer): BBone__factory {
    return super.connect(signer) as BBone__factory;
  }
  static readonly contractName: "BBone";
  public readonly contractName: "BBone";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BBoneInterface {
    return new utils.Interface(_abi) as BBoneInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BBone {
    return new Contract(address, _abi, signerOrProvider) as BBone;
  }
}
