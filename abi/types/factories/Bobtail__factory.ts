/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bobtail, BobtailInterface } from "../Bobtail";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bbone",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "feePercentage",
        type: "uint32",
      },
    ],
    name: "FeePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "LpPairsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "minTokensBeforeSwap",
        type: "uint128",
      },
    ],
    name: "MinTokensBeforeSwapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethReceived",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensIntoLiqudity",
        type: "uint256",
      },
    ],
    name: "SwapAndLiquify",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SwapAndLiquifyEnabledUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "UpdateTimeShare",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joePair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTokensBeforeSwap",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feePercentage",
        type: "uint32",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setLPPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_minTokensBeforeSwap",
        type: "uint32",
      },
    ],
    name: "setMinTokensBeforeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setSwapAndLiquifyEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAndLiquifyEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "timeShareBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "holdingDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "timeShares",
    outputs: [
      {
        internalType: "uint256",
        name: "lastBlockTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405260058054600160a11b63ffffffff60a01b19909116179055600680546001600160801b031916600a1790553480156200003c57600080fd5b5060405162001df738038062001df78339810160408190526200005f916200049c565b604080518082018252600d81526c426f627461696c2e67616d657360981b6020808301918252835180850190945260078452661093d09510525360ca1b908401528151919291620000b391600391620003d9565b508051620000c9906004906020840190620003d9565b505050620000e6620000e06200029b60201b60201c565b6200029f565b6200010f33620000f96012600a620005e9565b6200010990633b9aca0062000601565b620002f1565b6000829050806001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000153573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000179919062000623565b6001600160a01b031663c9c6539630836001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ed919062000623565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200023b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000261919062000623565b6001600160a01b0390811660c08190526000908152600760205260409020805460ff191660011790559081166080521660a0525062000699565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200034c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000360919062000641565b90915550506001600160a01b038216600090815260208190526040812080548392906200038f90849062000641565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620003e7906200065c565b90600052602060002090601f0160209004810192826200040b576000855562000456565b82601f106200042657805160ff191683800117855562000456565b8280016001018555821562000456579182015b828111156200045657825182559160200191906001019062000439565b506200046492915062000468565b5090565b5b8082111562000464576000815560010162000469565b80516001600160a01b03811681146200049757600080fd5b919050565b60008060408385031215620004b057600080fd5b620004bb836200047f565b9150620004cb602084016200047f565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200052b5781600019048211156200050f576200050f620004d4565b808516156200051d57918102915b93841c9390800290620004ef565b509250929050565b6000826200054457506001620005e3565b816200055357506000620005e3565b81600181146200056c5760028114620005775762000597565b6001915050620005e3565b60ff8411156200058b576200058b620004d4565b50506001821b620005e3565b5060208310610133831016604e8410600b8410161715620005bc575081810a620005e3565b620005c88383620004ea565b8060001904821115620005df57620005df620004d4565b0290505b92915050565b6000620005fa60ff84168362000533565b9392505050565b60008160001904831182151516156200061e576200061e620004d4565b500290565b6000602082840312156200063657600080fd5b620005fa826200047f565b60008219821115620006575762000657620004d4565b500190565b600181811c908216806200067157607f821691505b602082108114156200069357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05161170b620006ec6000396000610313015260008181610e3101528181610e6b01528181610eab01526112ea0152600081816111c10152818161127a01526112b6015261170b6000f3fe60806040526004361061014f5760003560e01c806370a08231116100b6578063a9059cbb1161006f578063a9059cbb14610424578063c49b9a8014610444578063cc56146014610464578063dd62ed3e14610484578063e5d41c6b146104ca578063f2fde38b1461050257600080fd5b806370a082311461034d578063715018a6146103835780638da5cb5b1461039857806395d89b41146103b6578063a001ecdd146103cb578063a457c2d71461040457600080fd5b8063313ce56711610108578063313ce5671461023b57806335dd03a21461025757806339509351146102775780634a74bb02146102975780636b10462e146102b85780636bca89cb1461030157600080fd5b806306fdde031461015b578063095ea7b3146101865780630f1eb29f146101b657806318160ddd146101e45780631ab971ab146101f957806323b872dd1461021b57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b50610170610522565b60405161017d919061134a565b60405180910390f35b34801561019257600080fd5b506101a66101a13660046113b4565b6105b4565b604051901515815260200161017d565b3480156101c257600080fd5b506101d66101d13660046113e0565b6105cc565b60405190815260200161017d565b3480156101f057600080fd5b506002546101d6565b34801561020557600080fd5b50610219610214366004611404565b610691565b005b34801561022757600080fd5b506101a661023636600461142a565b610787565b34801561024757600080fd5b506040516012815260200161017d565b34801561026357600080fd5b50610219610272366004611404565b6107ab565b34801561028357600080fd5b506101a66102923660046113b4565b610829565b3480156102a357600080fd5b506006546101a690600160801b900460ff1681565b3480156102c457600080fd5b506102ec6102d33660046113e0565b600a602052600090815260409020805460019091015482565b6040805192835260208301919091520161017d565b34801561030d57600080fd5b506103357f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161017d565b34801561035957600080fd5b506101d66103683660046113e0565b6001600160a01b031660009081526020819052604090205490565b34801561038f57600080fd5b50610219610868565b3480156103a457600080fd5b506005546001600160a01b0316610335565b3480156103c257600080fd5b5061017061089e565b3480156103d757600080fd5b506005546103ef90600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161017d565b34801561041057600080fd5b506101a661041f3660046113b4565b6108ad565b34801561043057600080fd5b506101a661043f3660046113b4565b61093f565b34801561045057600080fd5b5061021961045f366004611480565b61094d565b34801561047057600080fd5b5061021961047f36600461149b565b6109c4565b34801561049057600080fd5b506101d661049f3660046114d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156104d657600080fd5b506006546104ea906001600160801b031681565b6040516001600160801b03909116815260200161017d565b34801561050e57600080fd5b5061021961051d3660046113e0565b610a51565b60606003805461053190611509565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90611509565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b5050505050905090565b6000336105c2818585610aec565b5060019392505050565b6001600160a01b0381166000908152600a6020908152604080832081518083019092528054808352600190910154928201929092529061060c904261155a565b9150600061062f846001600160a01b031660009081526020819052604090205490565b60025461063c9190611571565b9050600061065f856001600160a01b031660009081526020819052604090205490565b6106699085611593565b6106759061016d611593565b61068790670de0b6b3a7640000611593565b9050505050919050565b6005546001600160a01b031633146106c45760405162461bcd60e51b81526004016106bb906115b2565b60405180910390fd5b60008163ffffffff161180156106e05750600a8163ffffffff16105b61072c5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206665653a206d696e203125206d617820392500000000000060448201526064016106bb565b6005805463ffffffff60a01b1916600160a01b63ffffffff8416908102919091179091556040519081527f290b00353812a22fc8b872010f1ea4d5332e9d942e31243ba7d1f8d40eb22e53906020015b60405180910390a150565b600033610795858285610c10565b6107a0858585610ca2565b506001949350505050565b6005546001600160a01b031633146107d55760405162461bcd60e51b81526004016106bb906115b2565b600680546fffffffffffffffffffffffffffffffff191663ffffffff83169081179091556040519081527fb20e0f86438dbd4812cee7b24a6696d4dbaa9d3db89c677e731ab7dd738c8bbe9060200161077c565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906105c290829086906108639087906115e7565b610aec565b6005546001600160a01b031633146108925760405162461bcd60e51b81526004016106bb906115b2565b61089c6000610dc8565b565b60606004805461053190611509565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156109325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106bb565b6107a08286868403610aec565b6000336105c2818585610ca2565b6005546001600160a01b031633146109775760405162461bcd60e51b81526004016106bb906115b2565b60068054821515600160801b0260ff60801b199091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc1599061077c90831515815260200190565b6005546001600160a01b031633146109ee5760405162461bcd60e51b81526004016106bb906115b2565b6001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527f9275848620775c1d80b27df21b269b20e3040d2fd33ebf6a514850b17fc94958910160405180910390a15050565b6005546001600160a01b03163314610a7b5760405162461bcd60e51b81526004016106bb906115b2565b6001600160a01b038116610ae05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106bb565b610ae981610dc8565b50565b6001600160a01b038316610b4e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106bb565b6001600160a01b038216610baf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106bb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c9c5781811015610c8f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106bb565b610c9c8484848403610aec565b50505050565b306000908152602081905260409020546006546001600160801b031681108015908190610cd2575060095460ff16155b8015610cee57503360009081526007602052604090205460ff16155b8015610d035750600654600160801b900460ff165b15610d1157610d1182610e1a565b3360009081526007602052604090205460ff168015610d395750600654600160801b900460ff165b8015610d48575060095460ff16155b15610da457600554600090606490610d6d90600160a01b900463ffffffff1686611593565b610d779190611571565b90506000610d85828661155a565b9050610d92873084610f24565b610d9d878783610f24565b5050610daf565b610daf858585610f24565b610db8856110f2565b610dc1846110f2565b5050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6009805460ff191660011790556001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001631610e5b8261116a565b6000610e91826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163161155a565b604051635a95479b60e11b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b52a8f3690610ee39084906000906004016115ff565b600060405180830381600087803b158015610efd57600080fd5b505af1158015610f11573d6000803e3d6000fd5b50506009805460ff191690555050505050565b6001600160a01b038316610f885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106bb565b6001600160a01b038216610fea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106bb565b6001600160a01b038316600090815260208190526040902054818110156110625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106bb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906110999084906115e7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110e591815260200190565b60405180910390a3610c9c565b6001600160a01b0381166000908152600a602052604090208054156111205761111a826105cc565b60018201555b42815560018101546040519081526001600160a01b038316907f88eaa1421f2568c78c4294b0c12b979329916010a9ddabac3e2df1f4f7409f449060200160405180910390a25050565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061119f5761119f611631565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190611647565b8160018151811061125457611254611631565b60200260200101906001600160a01b031690816001600160a01b03168152505061129f307f000000000000000000000000000000000000000000000000000000000000000084610aec565b604051633b158ab160e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063762b15629061131490859060009086907f0000000000000000000000000000000000000000000000000000000000000000904290600401611664565b600060405180830381600087803b15801561132e57600080fd5b505af1158015611342573d6000803e3d6000fd5b505050505050565b600060208083528351808285015260005b818110156113775785810183015185820160400152820161135b565b81811115611389576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ae957600080fd5b600080604083850312156113c757600080fd5b82356113d28161139f565b946020939093013593505050565b6000602082840312156113f257600080fd5b81356113fd8161139f565b9392505050565b60006020828403121561141657600080fd5b813563ffffffff811681146113fd57600080fd5b60008060006060848603121561143f57600080fd5b833561144a8161139f565b9250602084013561145a8161139f565b929592945050506040919091013590565b8035801515811461147b57600080fd5b919050565b60006020828403121561149257600080fd5b6113fd8261146b565b600080604083850312156114ae57600080fd5b82356114b98161139f565b91506114c76020840161146b565b90509250929050565b600080604083850312156114e357600080fd5b82356114ee8161139f565b915060208301356114fe8161139f565b809150509250929050565b600181811c9082168061151d57607f821691505b6020821081141561153e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561156c5761156c611544565b500390565b60008261158e57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156115ad576115ad611544565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156115fa576115fa611544565b500190565b828152604081016003831061162457634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561165957600080fd5b81516113fd8161139f565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156116b45784516001600160a01b03168352938301939183019160010161168f565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220aab332c9bd27d9886f18f6a03a427ac6db790bc3a45432c98e5f33ce42b32a1864736f6c634300080c0033";

type BobtailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BobtailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bobtail__factory extends ContractFactory {
  constructor(...args: BobtailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Bobtail";
  }

  deploy(
    _router: string,
    _bbone: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bobtail> {
    return super.deploy(_router, _bbone, overrides || {}) as Promise<Bobtail>;
  }
  getDeployTransaction(
    _router: string,
    _bbone: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, _bbone, overrides || {});
  }
  attach(address: string): Bobtail {
    return super.attach(address) as Bobtail;
  }
  connect(signer: Signer): Bobtail__factory {
    return super.connect(signer) as Bobtail__factory;
  }
  static readonly contractName: "Bobtail";
  public readonly contractName: "Bobtail";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BobtailInterface {
    return new utils.Interface(_abi) as BobtailInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bobtail {
    return new Contract(address, _abi, signerOrProvider) as Bobtail;
  }
}
