/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bobtail, BobtailInterface } from "../Bobtail";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bbone",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "feePercentage",
        type: "uint32",
      },
    ],
    name: "FeePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "LpPairsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "minTokensBeforeSwap",
        type: "uint128",
      },
    ],
    name: "MinTokensBeforeSwapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SwapAndLiquifyEnabledUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UpdateLevelExpTimestampFor",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "expAndLvl",
    outputs: [
      {
        internalType: "uint256",
        name: "lastTransferTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "aditionalExp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "expAndLvlExcluded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joePair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "levelExpDataFor",
    outputs: [
      {
        internalType: "uint256",
        name: "experience",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "holdPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "holdingDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTokensBeforeSwap",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feePercentage",
        type: "uint32",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setLPPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_minTokensBeforeSwap",
        type: "uint32",
      },
    ],
    name: "setMinTokensBeforeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setSwapAndLiquifyEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAndLiquifyEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405260058054600160a11b63ffffffff60a01b19909116179055600680546001600160801b031916600a1790553480156200003c57600080fd5b5060405162001f7838038062001f788339810160408190526200005f916200048b565b604080518082018252600d81526c426f627461696c2e67616d657360981b6020808301918252835180850190945260078452661093d09510525360ca1b908401528151919291620000b391600391620003c8565b508051620000c9906004906020840190620003c8565b505050620000e6620000e06200028a60201b60201c565b6200028e565b620000fe336b033b2e3c9fd0803ce8000000620002e0565b6000829050806001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000142573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001689190620004c3565b6001600160a01b031663c9c6539630836001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001dc9190620004c3565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200022a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002509190620004c3565b6001600160a01b0390811660c08190526000908152600760205260409020805460ff191660011790559081166080521660a052506200054c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200033b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200034f9190620004e8565b90915550506001600160a01b038216600090815260208190526040812080548392906200037e908490620004e8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620003d6906200050f565b90600052602060002090601f016020900481019282620003fa576000855562000445565b82601f106200041557805160ff191683800117855562000445565b8280016001018555821562000445579182015b828111156200044557825182559160200191906001019062000428565b506200045392915062000457565b5090565b5b8082111562000453576000815560010162000458565b80516001600160a01b03811681146200048657600080fd5b919050565b600080604083850312156200049f57600080fd5b620004aa836200046e565b9150620004ba602084016200046e565b90509250929050565b600060208284031215620004d657600080fd5b620004e1826200046e565b9392505050565b600082198211156200050a57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200052457607f821691505b602082108114156200054657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c0516119d96200059f600039600061033a015260008181610f5c01528181610f9601528181610fd601526115a201526000818161147901528181611532015261156e01526119d96000f3fe60806040526004361061016a5760003560e01c806370a08231116100d1578063a457c2d71161008a578063cc56146011610064578063cc561460146104cb578063dd62ed3e146104eb578063e5d41c6b14610531578063f2fde38b1461056957600080fd5b8063a457c2d71461046b578063a9059cbb1461048b578063c49b9a80146104ab57600080fd5b806370a0823114610374578063715018a6146103aa5780638da5cb5b146103bf57806395d89b41146103dd5780639a595f94146103f2578063a001ecdd1461043257600080fd5b80632b2103b8116101235780632b2103b81461027b578063313ce567146102ab57806335dd03a2146102c757806339509351146102e75780634a74bb02146103075780636bca89cb1461032857600080fd5b806306fdde0314610176578063095ea7b3146101a157806318160ddd146101d15780631ab971ab146101f057806323b872dd1461021257806328bd69751461023257600080fd5b3661017157005b600080fd5b34801561018257600080fd5b5061018b610589565b6040516101989190611602565b60405180910390f35b3480156101ad57600080fd5b506101c16101bc36600461166c565b61061b565b6040519015158152602001610198565b3480156101dd57600080fd5b506002545b604051908152602001610198565b3480156101fc57600080fd5b5061021061020b366004611698565b610633565b005b34801561021e57600080fd5b506101c161022d3660046116c5565b610729565b34801561023e57600080fd5b5061026661024d366004611706565b600a602052600090815260409020805460019091015482565b60408051928352602083019190915201610198565b34801561028757600080fd5b506101c1610296366004611706565b60096020526000908152604090205460ff1681565b3480156102b757600080fd5b5060405160128152602001610198565b3480156102d357600080fd5b506102106102e2366004611698565b61074d565b3480156102f357600080fd5b506101c161030236600461166c565b6107cb565b34801561031357600080fd5b506006546101c190600160801b900460ff1681565b34801561033457600080fd5b5061035c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610198565b34801561038057600080fd5b506101e261038f366004611706565b6001600160a01b031660009081526020819052604090205490565b3480156103b657600080fd5b5061021061080a565b3480156103cb57600080fd5b506005546001600160a01b031661035c565b3480156103e957600080fd5b5061018b610840565b3480156103fe57600080fd5b5061041261040d366004611706565b61084f565b604080519485526020850193909352918301526060820152608001610198565b34801561043e57600080fd5b5060055461045690600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610198565b34801561047757600080fd5b506101c161048636600461166c565b610980565b34801561049757600080fd5b506101c16104a636600461166c565b610a12565b3480156104b757600080fd5b506102106104c6366004611738565b610a20565b3480156104d757600080fd5b506102106104e6366004611753565b610a97565b3480156104f757600080fd5b506101e2610506366004611788565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561053d57600080fd5b50600654610551906001600160801b031681565b6040516001600160801b039091168152602001610198565b34801561057557600080fd5b50610210610584366004611706565b610b24565b606060038054610598906117c1565b80601f01602080910402602001604051908101604052809291908181526020018280546105c4906117c1565b80156106115780601f106105e657610100808354040283529160200191610611565b820191906000526020600020905b8154815290600101906020018083116105f457829003601f168201915b5050505050905090565b600033610629818585610bbf565b5060019392505050565b6005546001600160a01b031633146106665760405162461bcd60e51b815260040161065d906117fc565b60405180910390fd5b60008163ffffffff161180156106825750600a8163ffffffff16105b6106ce5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206665653a206d696e203125206d6178203925000000000000604482015260640161065d565b6005805463ffffffff60a01b1916600160a01b63ffffffff8416908102919091179091556040519081527f290b00353812a22fc8b872010f1ea4d5332e9d942e31243ba7d1f8d40eb22e53906020015b60405180910390a150565b600033610737858285610ce3565b610742858585610d75565b506001949350505050565b6005546001600160a01b031633146107775760405162461bcd60e51b815260040161065d906117fc565b600680546fffffffffffffffffffffffffffffffff191663ffffffff83169081179091556040519081527fb20e0f86438dbd4812cee7b24a6696d4dbaa9d3db89c677e731ab7dd738c8bbe9060200161071e565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906106299082908690610805908790611847565b610bbf565b6005546001600160a01b031633146108345760405162461bcd60e51b815260040161065d906117fc565b61083e6000610e9b565b565b606060048054610598906117c1565b6000806000806000610876866001600160a01b031660009081526020819052604090205490565b6001600160a01b0387166000908152600a602090815260409182902082518084019093528054835260010154908201529091508115806108b557508051155b806108d857506001600160a01b03871660009081526009602052604090205460ff165b156108f25760008060008095509550955095505050610979565b8051600a90610901904261185f565b61090b919061188c565b925064174876e80061091c60025490565b61092e84678ac7230489e800006118ae565b610938919061188c565b610942919061188c565b935061094e8385611847565b955064174876e80061095f87610eed565b61096a90600f6118ae565b610974919061188c565b945050505b9193509193565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610a055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161065d565b6107428286868403610bbf565b600033610629818585610d75565b6005546001600160a01b03163314610a4a5760405162461bcd60e51b815260040161065d906117fc565b60068054821515600160801b0260ff60801b199091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc1599061071e90831515815260200190565b6005546001600160a01b03163314610ac15760405162461bcd60e51b815260040161065d906117fc565b6001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527f9275848620775c1d80b27df21b269b20e3040d2fd33ebf6a514850b17fc94958910160405180910390a15050565b6005546001600160a01b03163314610b4e5760405162461bcd60e51b815260040161065d906117fc565b6001600160a01b038116610bb35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161065d565b610bbc81610e9b565b50565b6001600160a01b038316610c215760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161065d565b6001600160a01b038216610c825760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161065d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610d6f5781811015610d625760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161065d565b610d6f8484848403610bbf565b50505050565b306000908152602081905260409020546006546001600160801b031681108015908190610da5575060085460ff16155b8015610dc157503360009081526007602052604090205460ff16155b8015610dd65750600654600160801b900460ff165b15610de457610de482610f45565b3360009081526007602052604090205460ff168015610e0c5750600654600160801b900460ff165b8015610e1b575060085460ff16155b15610e7757600554600090606490610e4090600160a01b900463ffffffff16866118ae565b610e4a919061188c565b90506000610e58828661185f565b9050610e6587308461104f565b610e7087878361104f565b5050610e82565b610e8285858561104f565b610e8b8561121d565b610e948461121d565b5050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21821115610f2c57604051636155b67d60e01b81526004810183905260240161065d565b610f3f670de0b6b3a764000083026112a7565b92915050565b6008805460ff191660011790556001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001631610f8682611422565b6000610fbc826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163161185f565b604051635a95479b60e11b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b52a8f369061100e9084906000906004016118cd565b600060405180830381600087803b15801561102857600080fd5b505af115801561103c573d6000803e3d6000fd5b50506008805460ff191690555050505050565b6001600160a01b0383166110b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161065d565b6001600160a01b0382166111155760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161065d565b6001600160a01b0383166000908152602081905260409020548181101561118d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161065d565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111c4908490611847565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161121091815260200190565b60405180910390a3610d6f565b6001600160a01b0381161580159061124e57506001600160a01b03811660009081526009602052604090205460ff16155b15610bbc576001600160a01b0381166000818152600a6020908152604091829020429081905591519182527fcec6da58c2d1e8016cbdfe07e72b66e1dd8822b3c57ddb68b6e0e17dbd32a793910160405180910390a250565b6000816112b657506000919050565b50600181600160801b81106112d05760409190911b9060801c5b6801000000000000000081106112eb5760209190911b9060401c5b64010000000081106113025760109190911b9060201c5b6201000081106113175760089190911b9060101c5b610100811061132b5760049190911b9060081c5b6010811061133e5760029190911b9060041c5b6008811061134e57600182901b91505b600182848161135f5761135f611876565b048301901c9150600182848161137757611377611876565b048301901c9150600182848161138f5761138f611876565b048301901c915060018284816113a7576113a7611876565b048301901c915060018284816113bf576113bf611876565b048301901c915060018284816113d7576113d7611876565b048301901c915060018284816113ef576113ef611876565b048301901c9150600082848161140757611407611876565b04905080831015611418578261141a565b805b949350505050565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110611457576114576118ff565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166373b295c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f99190611915565b8160018151811061150c5761150c6118ff565b60200260200101906001600160a01b031690816001600160a01b031681525050611557307f000000000000000000000000000000000000000000000000000000000000000084610bbf565b604051633b158ab160e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063762b1562906115cc90859060009086907f0000000000000000000000000000000000000000000000000000000000000000904290600401611932565b600060405180830381600087803b1580156115e657600080fd5b505af11580156115fa573d6000803e3d6000fd5b505050505050565b600060208083528351808285015260005b8181101561162f57858101830151858201604001528201611613565b81811115611641576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610bbc57600080fd5b6000806040838503121561167f57600080fd5b823561168a81611657565b946020939093013593505050565b6000602082840312156116aa57600080fd5b813563ffffffff811681146116be57600080fd5b9392505050565b6000806000606084860312156116da57600080fd5b83356116e581611657565b925060208401356116f581611657565b929592945050506040919091013590565b60006020828403121561171857600080fd5b81356116be81611657565b8035801515811461173357600080fd5b919050565b60006020828403121561174a57600080fd5b6116be82611723565b6000806040838503121561176657600080fd5b823561177181611657565b915061177f60208401611723565b90509250929050565b6000806040838503121561179b57600080fd5b82356117a681611657565b915060208301356117b681611657565b809150509250929050565b600181811c908216806117d557607f821691505b602082108114156117f657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561185a5761185a611831565b500190565b60008282101561187157611871611831565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826118a957634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156118c8576118c8611831565b500290565b82815260408101600383106118f257634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561192757600080fd5b81516116be81611657565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156119825784516001600160a01b03168352938301939183019160010161195d565b50506001600160a01b0396909616606085015250505060800152939250505056fea264697066735822122013f8b0c6472183b0cff51919fccf483ea787e69e17d05c8a5d8e7b3937e97c2b64736f6c634300080c0033";

type BobtailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BobtailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bobtail__factory extends ContractFactory {
  constructor(...args: BobtailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Bobtail";
  }

  deploy(
    _router: string,
    _bbone: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bobtail> {
    return super.deploy(_router, _bbone, overrides || {}) as Promise<Bobtail>;
  }
  getDeployTransaction(
    _router: string,
    _bbone: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, _bbone, overrides || {});
  }
  attach(address: string): Bobtail {
    return super.attach(address) as Bobtail;
  }
  connect(signer: Signer): Bobtail__factory {
    return super.connect(signer) as Bobtail__factory;
  }
  static readonly contractName: "Bobtail";
  public readonly contractName: "Bobtail";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BobtailInterface {
    return new utils.Interface(_abi) as BobtailInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bobtail {
    return new Contract(address, _abi, signerOrProvider) as Bobtail;
  }
}
