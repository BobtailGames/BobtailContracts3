/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Matchs, MatchsInterface } from "../Matchs";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mainSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bbone",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "matchDuration",
        type: "uint256",
      },
    ],
    name: "MatchDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPlayersPerMatch",
        type: "uint256",
      },
    ],
    name: "MaxPlayersPerMatchUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NewAddressInMatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPlayers",
        type: "uint256",
      },
    ],
    name: "NewMatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "portionRewardPerRank",
        type: "uint256[]",
      },
    ],
    name: "PortionRewardPerRankUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "matchIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "matchDuration",
        type: "address",
      },
    ],
    name: "StakingManagerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_region",
        type: "string",
      },
    ],
    name: "activeMatchsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowedNftContract",
    outputs: [
      {
        internalType: "contract IBobtailNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bbone",
    outputs: [
      {
        internalType: "contract IBBone",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_ranks",
        type: "uint256[]",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "currentMatchForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentMatchForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "region",
        type: "string",
      },
    ],
    name: "joinMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMatchIdClaimedForAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchCountPerRegion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "matchForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "inMatch",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matchs",
    outputs: [
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "finished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPlayersPerMatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "serverRegions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchDuration",
        type: "uint256",
      },
    ],
    name: "setMatchDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchCountPerRegion",
        type: "uint256",
      },
    ],
    name: "setMatchsPerRegion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPlayersPerMatch",
        type: "uint256",
      },
    ],
    name: "setMaxPlayersPerMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_portionRewardPerRank",
        type: "uint256[]",
      },
    ],
    name: "setPortionRewardPerRank",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setServerRegion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingManager",
        type: "address",
      },
    ],
    name: "setStakingManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingManager",
    outputs: [
      {
        internalType: "contract IBobtailStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenInMatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardPerMatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526001600055610151600355610258600655606460075560026008553480156200002c57600080fd5b5060405162002ac038038062002ac08339810160408190526200004f9162000297565b6200005a3362000228565b600480546001600160a01b0319166001600160a01b0394851617905560408051614e4160f01b81526009600282018190529151908190036022019020805460ff1916600117905591831660805290911660a05260056020526108987f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc556105147f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b556102bc7f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a556101f47fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc05561012c7f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d55560fa7f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432d5560c87f069400f22b28c6c362558d92f66163cec5671cba50b61abd2eecfcd0eaeac5185560647feddb6698d7c569ff62ff64f1f1492bf14a54594835ba0faac91f84b4f5d814605560327ffb33122aa9f93cc639ebe80a7bc4784c11e6053dde89c6f4f7e268c6a623da1e5560005260197fc0a4a8be475dfebc377ebef2d7c4ff47656f572a08dd92b81017efcdba0febe155620002e1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200029257600080fd5b919050565b600080600060608486031215620002ad57600080fd5b620002b8846200027a565b9250620002c8602085016200027a565b9150620002d8604085016200027a565b90509250925092565b60805160a0516127ab620003156000396000818161047f01526118300152600081816103170152610c4d01526127ab6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636d5e8f28116100f9578063bbcacf0311610097578063e6c4070e11610071578063e6c4070e1461047a578063f2fde38b146104a1578063f7cd08c1146104b4578063ff9bb409146104c757600080fd5b8063bbcacf0314610430578063be8b4e1514610439578063dade62021461046757600080fd5b80638a09f036116100d35780638a09f036146103d95780638da5cb5b146103ec578063b00bba6a146103fd578063bb626fde1461041057600080fd5b80636d5e8f28146103a5578063715018a6146103ae578063885a5021146103b657600080fd5b806337bc01e1116101665780634f1e353f116101405780634f1e353f146103395780634fdc2fb41461034c57806359d04f1f146103555780635f9862831461036857600080fd5b806337bc01e1146102ec578063474fa01f146102ff578063476b6d921461031257600080fd5b806317c4ecfb116101a257806317c4ecfb1461021a57806322828cc21461028e5780632401e4e6146102b957806328dd99d0146102cc57600080fd5b80630200c069146101c95780630d83ed4b146101de5780630e649a0b14610211575b600080fd5b6101dc6101d736600461227b565b6104d0565b005b6101fe6101ec36600461232d565b600f6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101fe60065481565b61025f61022836600461234a565b600c602052600090815260409020805460018201546002830154600384015460049094015460ff8085169561010090950416939086565b6040805196151587529415156020870152938501929092526060840152608083015260a082015260c001610208565b6002546102a1906001600160a01b031681565b6040516001600160a01b039091168152602001610208565b6101dc6102c73660046123b3565b610d00565b6101fe6102da36600461232d565b600d6020526000908152604090205481565b6101dc6102fa36600461240a565b610d38565b6101dc61030d36600461234a565b611467565b6102a17f000000000000000000000000000000000000000000000000000000000000000081565b6101fe61034736600461244c565b6114bc565b6101fe600b5481565b6101dc61036336600461234a565b61152a565b61037b61037636600461232d565b6115e1565b6040805195865293151560208601529284019190915260608301521515608082015260a001610208565b6101fe60085481565b6101dc61163b565b6103c96103c436600461234a565b611671565b6040519015158152602001610208565b6101dc6103e7366004612482565b61169f565b6001546001600160a01b03166102a1565b6101dc61040b36600461232d565b611c96565b6101fe61041e36600461234a565b600e6020526000908152604090205481565b6101fe60035481565b6103c96104473660046124e4565b805160208183018101805160098252928201919093012091525460ff1681565b6004546102a1906001600160a01b031681565b6102a17f000000000000000000000000000000000000000000000000000000000000000081565b6101dc6104af36600461232d565b611d0e565b6101dc6104c236600461234a565b611da9565b6101fe60075481565b333b1561050f5760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b60448201526064015b60405180910390fd5b60005460011461054e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610506565b6002600055851580159061056157508315155b61059f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610506565b8584146105e05760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610506565b60008787878733306040516020016105fd969594939291906125cb565b60405160208183030381529060405280519060200120905060008160405160200161065491907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051808303601f1901815282825280516020918201206004546000855291840180845281905260ff87169284019290925260608301889052608083018790529092506001600160a01b03169060019060a0016020604051602081039080840390855afa1580156106ca573d6000803e3d6000fd5b505050602060405103516001600160a01b03161461071c5760405162461bcd60e51b815260206004820152600f60248201526e57726f6e67207369676e617475726560881b6044820152606401610506565b6000805b89811015610c2a5760008b8b8381811061073c5761073c612619565b90506020020135116107835760405162461bcd60e51b815260206004820152601060248201526f13585d18da081a59081a5b9d985b1a5960821b6044820152606401610506565b600089898381811061079757610797612619565b905060200201351180156107c3575060658989838181106107ba576107ba612619565b90506020020135105b6107fe5760405162461bcd60e51b815260206004820152600c60248201526b14985b9ac81a5b9d985b1a5960a21b6044820152606401610506565b600c60008c8c8481811061081457610814612619565b90506020020135815260200190815260200160002060010154600014156108735760405162461bcd60e51b815260206004820152601360248201527213585d18da081a5cdb89dd081cdd185c9d1959606a1b6044820152606401610506565b6108948b8b8381811061088857610888612619565b90506020020135611e58565b156108d95760405162461bcd60e51b815260206004820152601560248201527413585d18da081a5cc81b9bdd08199a5b9a5cda1959605a1b6044820152606401610506565b600c60008c8c848181106108ef576108ef612619565b60209081029290920135835250818101929092526040908101600090812033825260060190925290205460ff1661095f5760405162461bcd60e51b8152602060048201526014602482015273082c8c8e4cae6e640dcdee840d2dc40dac2e8c6d60631b6044820152606401610506565b600c60008c8c8481811061097557610975612619565b602090810292909201358352508181019290925260409081016000908120338252600601909252902054610100900460ff16156109f45760405162461bcd60e51b815260206004820181905260248201527f4163636f756e7420616e64206d617463682072657761726420636c61696d65646044820152606401610506565b600c60008c8c84818110610a0a57610a0a612619565b90506020020135815260200190815260200160002060070160008a8a84818110610a3657610a36612619565b90506020020135815260200190815260200160002054600014610a9b5760405162461bcd60e51b815260206004820152601c60248201527f52616e6b2072657761726420686173206265656e20636c61696d6564000000006044820152606401610506565b6000610abe8a8a84818110610ab257610ab2612619565b90506020020135611e82565b90506001600c60008e8e86818110610ad857610ad8612619565b602090810292909201358352508181019290925260409081016000908120338252600601909252812080549215156101000261ff001990931692909217909155600190600c908e8e86818110610b3057610b30612619565b90506020020135815260200190815260200160002060070160008c8c86818110610b5c57610b5c612619565b9050602002013581526020019081526020016000208190555080600c60008e8e86818110610b8c57610b8c612619565b602090810292909201358352508181019290925260409081016000908120338252600601909252902060020155898983818110610bcb57610bcb612619565b90506020020135600c60008e8e86818110610be857610be8612619565b602090810292909201358352508181019290925260409081016000908120338252600601909252902060010155610c1f8184612645565b925050600101610720565b508015610cef57604051634a0a0e4b60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634a0a0e4b90604401600060405180830381600087803b158015610c9957600080fd5b505af1158015610cad573d6000803e3d6000fd5b505050507fde44805992b70ab499033e37a0bb5830acec04de9ed6d99e81d48e67cf454bad338b8b84604051610ce6949392919061265d565b60405180910390a15b505060016000555050505050505050565b8060098484604051610d13929190612693565b908152604051908190036020019020805491151560ff19909216919091179055505050565b6001546001600160a01b03163314610d625760405162461bcd60e51b8152600401610506906126a3565b600a8114610db25760405162461bcd60e51b815260206004820152601c60248201527f4c656e677468206f662061727261792073686f756c64206265203130000000006044820152606401610506565b600082826009818110610dc757610dc7612619565b90506020020135600a610dda91906126d8565b83836008818110610ded57610ded612619565b90506020020135600a610e0091906126d8565b84846007818110610e1357610e13612619565b90506020020135600a610e2691906126d8565b85856006818110610e3957610e39612619565b90506020020135600a610e4c91906126d8565b86866005818110610e5f57610e5f612619565b905060200201356005610e7291906126d8565b87876004818110610e8557610e85612619565b9050602002013588886003818110610e9f57610e9f612619565b9050602002013589896002818110610eb957610eb9612619565b905060200201358a8a6001818110610ed357610ed3612619565b905060200201358b8b6000818110610eed57610eed612619565b90506020020135610efe9190612645565b610f089190612645565b610f129190612645565b610f1c9190612645565b610f269190612645565b610f309190612645565b610f3a9190612645565b610f449190612645565b610f4e9190612645565b90508061271014610fa15760405162461bcd60e51b815260206004820152601e60248201527f53756d206f6620726577617264732073686f756c6420626520313030303000006044820152606401610506565b61138983836000818110610fb757610fb7612619565b90506020020135108015610fe5575061138983836001818110610fdc57610fdc612619565b90506020020135105b801561100b57506113898383600281811061100257611002612619565b90506020020135105b801561103157506113898383600381811061102857611028612619565b90506020020135105b801561105757506113898383600481811061104e5761104e612619565b90506020020135105b801561107d57506113898383600581811061107457611074612619565b90506020020135105b80156110a357506113898383600681811061109a5761109a612619565b90506020020135105b80156110c95750611389838360078181106110c0576110c0612619565b90506020020135105b80156110ef5750611389838360088181106110e6576110e6612619565b90506020020135105b801561111557506113898383600981811061110c5761110c612619565b90506020020135105b6111575760405162461bcd60e51b8152602060048201526013602482015272496e76616c69642076616c7565203c3530303160681b6044820152606401610506565b8282600081811061116a5761116a612619565b60008052600560209081520291909101357f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc5550828260018181106111b1576111b1612619565b6001600052600560209081520291909101357f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b5550828260028181106111f9576111f9612619565b6002600052600560209081520291909101357f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55508282600381811061124157611241612619565b6003600052600560209081520291909101357fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc055508282600481811061128957611289612619565b60046000526005602081815290910292909201357f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d55550839083908181106112d3576112d3612619565b6005600081905260209081520291909101357f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432d55508282600681811061131b5761131b612619565b6006600052600560209081520291909101357f069400f22b28c6c362558d92f66163cec5671cba50b61abd2eecfcd0eaeac51855508282600781811061136357611363612619565b6007600052600560209081520291909101357feddb6698d7c569ff62ff64f1f1492bf14a54594835ba0faac91f84b4f5d814605550828260088181106113ab576113ab612619565b6008600052600560209081520291909101357ffb33122aa9f93cc639ebe80a7bc4784c11e6053dde89c6f4f7e268c6a623da1e5550828260098181106113f3576113f3612619565b6009600052600560209081520291909101357fc0a4a8be475dfebc377ebef2d7c4ff47656f572a08dd92b81017efcdba0febe155506040517f7772810e3ad8acd693759832bb96eda9b7da2793639ace6af2f1fdc8c0afa8109061145a90859085906126f7565b60405180910390a1505050565b60008111801561147857506103e881105b6114b75760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606401610506565b600855565b6000805b600854811015611523576000600a85856040516114de929190612693565b9081526040805160209281900383019020600085815292529020549050801580159061150e575061150e81611e58565b1561151a578260010192505b506001016114c0565b5092915050565b6001546001600160a01b031633146115545760405162461bcd60e51b8152600401610506906126a3565b600a8111801561156657506202a30081105b6115a55760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b6044820152606401610506565b60068190556040518181527f1c44183c85bfea551d74341d87d3e049f755be0969b861e73d0f07d30e560b26906020015b60405180910390a150565b6001600160a01b0381166000908152600d60205260408120549080808084156116325750600161161085611e58565b6000868152600c60205260409020600181015460029091015491159550935091505b91939590929450565b6001546001600160a01b031633146116655760405162461bcd60e51b8152600401610506906126a3565b61166f6000612048565b565b6000818152600e602052604081205480156116965761168f81611e58565b9392505050565b50600092915050565b333b156116d95760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b6044820152606401610506565b6000546001146117185760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610506565b60026000819055546001600160a01b031661176e5760405162461bcd60e51b815260206004820152601660248201527514dd185ada5b99d3585b9859d95c881b9bdd081cd95d60521b6044820152606401610506565b60098282604051611780929190612693565b9081526040519081900360200190205460ff166117d05760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103932b3b4b7b760911b6044820152606401610506565b826118105760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081d1bdad95b881a5960821b6044820152606401610506565b6040516331a9108f60e11b81526004810184905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015611877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189b9190612713565b6001600160a01b0316146118f15760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e206e6f74206f776e65642066726f6d2073656e64657200000000006044820152606401610506565b600254604051635d528fc360e11b8152600481018590526000916001600160a01b03169063baa51f86906024016040805180830381865afa15801561193a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195e9190612730565b509050806119a75760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881cda1bdd5b19081899481cdd185ad95960521b6044820152606401610506565b6000848152600e60205260409020548015611a09576119c581611e58565b15611a095760405162461bcd60e51b8152602060048201526014602482015273086eae4e4cadce8d8f240d2dc40c240dac2e8c6d60631b6044820152606401610506565b336000908152600d60205260409020548015611a6c57611a2881611e58565b15611a6c5760405162461bcd60e51b8152602060048201526014602482015273086eae4e4cadce8d8f240d2dc40c240dac2e8c6d60631b6044820152606401610506565b611a76858561209a565b905080611aba5760405162461bcd60e51b81526020600482015260126024820152714e6f206d6174636820617661696c61626c6560701b6044820152606401610506565b80600e60008881526020019081526020016000208190555080600d6000336001600160a01b03166001600160a01b0316815260200190815260200160002081905550600c6000828152602001908152602001600020600501339080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506040518060c00160405280600115158152602001600015158152602001600081526020016000815260200142815260200187815250600c60008381526020019081526020016000206006016000336001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401559050507f2d15cdeceb400aef1ceda76fb5e684ad33b5877ff819da3f41e4b90f9704a50b338288604051611c81939291906001600160a01b039390931683526020830191909152604082015260600190565b60405180910390a15050600160005550505050565b6001546001600160a01b03163314611cc05760405162461bcd60e51b8152600401610506906126a3565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f55acc64e4a72cc89f8652df08117adc5f4c96f616ea32414ce208b82e370a2db906020016115d6565b6001546001600160a01b03163314611d385760405162461bcd60e51b8152600401610506906126a3565b6001600160a01b038116611d9d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610506565b611da681612048565b50565b6001546001600160a01b03163314611dd35760405162461bcd60e51b8152600401610506906126a3565b600081118015611de457506105dd81105b611e235760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606401610506565b60078190556040518181527f2bebced33ac0c8a2cc832e81eb47ac360bf921544129e8c7726a08f44d18502d906020016115d6565b6000818152600c602052604081206002810154600190910154611e7b904261275e565b1092915050565b60008060018310158015611e97575060058311155b15611ec15760056000611eab60018661275e565b815260200190815260200160002054905061202a565b60068310158015611ed35750600a8311155b15611f0a5750600560008190526020527f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432d5461202a565b600b8310158015611f1c575060148311155b15611f535750600660005260056020527f069400f22b28c6c362558d92f66163cec5671cba50b61abd2eecfcd0eaeac5185461202a565b60158310158015611f655750601e8311155b15611f9c5750600760005260056020527feddb6698d7c569ff62ff64f1f1492bf14a54594835ba0faac91f84b4f5d814605461202a565b601f8310158015611fae575060288311155b15611fe55750600860005260056020527ffb33122aa9f93cc639ebe80a7bc4784c11e6053dde89c6f4f7e268c6a623da1e5461202a565b60298310158015611ff7575060328311155b1561202a5750600960005260056020527fc0a4a8be475dfebc377ebef2d7c4ff47656f572a08dd92b81017efcdba0febe1545b8060035461203891906126d8565b61168f90655af3107a40006126d8565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808080805b60085481101561213b576000600a88886040516120bf929190612693565b908152604080516020928190038301902060008581529252902054905080158015906120ef57506120ef81611e58565b15612125576000818152600c602052604090206003810154600590910154101561211a57945061213b565b846001019450612132565b8261213257819350600192505b506001016120a1565b50808015612147575083155b8015612154575060085483105b1561222657600b8054600101908190556040519094508490600a9061217c9089908990612693565b908152604080519182900360209081018320600087815290825282812094909455878452600c815292819020805461ffff1916600190811782554290820181905560068054600284015560078054600385015560048401899055905490548a865295850188905292840152606083019190915260808201929092527f6d8553337c68f22df50c1a8f50319dca0bfbccbddd72e2a9fa87937271eff69b9060a00160405180910390a1505b50505092915050565b60008083601f84011261224157600080fd5b50813567ffffffffffffffff81111561225957600080fd5b6020830191508360208260051b850101111561227457600080fd5b9250929050565b600080600080600080600060a0888a03121561229657600080fd5b873567ffffffffffffffff808211156122ae57600080fd5b6122ba8b838c0161222f565b909950975060208a01359150808211156122d357600080fd5b506122e08a828b0161222f565b9096509450506040880135925060608801359150608088013560ff8116811461230857600080fd5b8091505092959891949750929550565b6001600160a01b0381168114611da657600080fd5b60006020828403121561233f57600080fd5b813561168f81612318565b60006020828403121561235c57600080fd5b5035919050565b60008083601f84011261237557600080fd5b50813567ffffffffffffffff81111561238d57600080fd5b60208301915083602082850101111561227457600080fd5b8015158114611da657600080fd5b6000806000604084860312156123c857600080fd5b833567ffffffffffffffff8111156123df57600080fd5b6123eb86828701612363565b90945092505060208401356123ff816123a5565b809150509250925092565b6000806020838503121561241d57600080fd5b823567ffffffffffffffff81111561243457600080fd5b6124408582860161222f565b90969095509350505050565b6000806020838503121561245f57600080fd5b823567ffffffffffffffff81111561247657600080fd5b61244085828601612363565b60008060006040848603121561249757600080fd5b83359250602084013567ffffffffffffffff8111156124b557600080fd5b6124c186828701612363565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156124f657600080fd5b813567ffffffffffffffff8082111561250e57600080fd5b818401915084601f83011261252257600080fd5b813581811115612534576125346124ce565b604051601f8201601f19908116603f0116810190838211818310171561255c5761255c6124ce565b8160405282815287602084870101111561257557600080fd5b826020860160208301376000928101602001929092525095945050505050565b81835260006001600160fb1b038311156125ae57600080fd5b8260051b8083602087013760009401602001938452509192915050565b6080815260006125df60808301888a612595565b82810360208401526125f2818789612595565b6001600160a01b039586166040850152939094166060909201919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156126585761265861262f565b500190565b6001600160a01b03851681526060602082018190526000906126829083018587612595565b905082604083015295945050505050565b8183823760009101908152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156126f2576126f261262f565b500290565b60208152600061270b602083018486612595565b949350505050565b60006020828403121561272557600080fd5b815161168f81612318565b6000806040838503121561274357600080fd5b825161274e816123a5565b6020939093015192949293505050565b6000828210156127705761277061262f565b50039056fea2646970667358221220e7b639de12b0d387341bde9bce6483d0e08261200765bee9f3817751841ae99264736f6c634300080c0033";

type MatchsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatchsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Matchs__factory extends ContractFactory {
  constructor(...args: MatchsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Matchs";
  }

  deploy(
    _mainSigner: string,
    _bbone: string,
    _contractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Matchs> {
    return super.deploy(
      _mainSigner,
      _bbone,
      _contractAddress,
      overrides || {}
    ) as Promise<Matchs>;
  }
  getDeployTransaction(
    _mainSigner: string,
    _bbone: string,
    _contractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mainSigner,
      _bbone,
      _contractAddress,
      overrides || {}
    );
  }
  attach(address: string): Matchs {
    return super.attach(address) as Matchs;
  }
  connect(signer: Signer): Matchs__factory {
    return super.connect(signer) as Matchs__factory;
  }
  static readonly contractName: "Matchs";
  public readonly contractName: "Matchs";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatchsInterface {
    return new utils.Interface(_abi) as MatchsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Matchs {
    return new Contract(address, _abi, signerOrProvider) as Matchs;
  }
}
